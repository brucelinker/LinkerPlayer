<UserControl
  x:Class="LinkerPlayer.UserControls.PlaylistTabs"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converters="clr-namespace:LinkerPlayer.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"

  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
  xmlns:managedBass="clr-namespace:ManagedBass;assembly=ManagedBass"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:models="clr-namespace:LinkerPlayer.Models"
  xmlns:userControls="clr-namespace:LinkerPlayer.UserControls"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  d:DesignHeight="80"
  d:DesignWidth="800"
  FontFamily="Segoe UI"
  mc:Ignorable="d">

  <UserControl.Resources>
    <ResourceDictionary>
      <converters:DurationConverter x:Key="DurationConverter" />
      <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
      <converters:IndexConverter x:Key="IndexConverter" />
      <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

      <Style TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource PlaylistTabBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PlaylistTabBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="0" />
      </Style>

      <Style TargetType="TabItem">
        <Setter Property="Background" Value="{DynamicResource PlaylistTabBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0" />
      </Style>

      <Style x:Key="EditableTabHeaderControl" TargetType="{x:Type userControls:EditableTabHeaderControl}">
        <Setter Property="Background" Value="{DynamicResource PlaylistTabBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PlaylistTabForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type userControls:EditableTabHeaderControl}">
              <Border
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <TextBox
                    x:Name="PART_TabHeader"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Foreground="{TemplateBinding Foreground}"
                    Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Visibility="Collapsed" />
                  <TextBlock
                    x:Name="PART_TextBlock"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Foreground="{TemplateBinding Foreground}"
                    Text="{Binding Name, Mode=TwoWay}" />
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsInEditMode" Value="True">
                  <Setter TargetName="PART_TabHeader" Property="Visibility" Value="Visible" />
                  <Setter TargetName="PART_TextBlock" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=IsSelected}" Value="True">
                  <Setter Property="Background" Value="{DynamicResource PlaylistTabSelectedBackgroundBrush}" />
                  <Setter Property="Foreground" Value="{DynamicResource PlaylistTabSelectedForegroundBrush}" />
                </DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ContextMenu}">
              <Border
                Background="{DynamicResource MenuBackgroundBrush}"
                BorderBrush="{DynamicResource MenuDisabledBrush}"
                BorderThickness="1"
                CornerRadius="1"
                Opacity="1">
                <StackPanel
                  Margin="0"
                  ClipToBounds="True"
                  IsItemsHost="True"
                  Opacity="1"
                  Orientation="Vertical" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="TabItemContainerStyle" TargetType="TabItem">
        <Setter Property="Background" Value="{DynamicResource PlaylistTabBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="TabItem">
              <Border
                x:Name="TabBorder"
                Padding="12,3,12,3"
                Background="{TemplateBinding Background}"
                BorderBrush="{DynamicResource PlaylistTabBorderBrush}"
                BorderThickness="1,1,1,0">
                <ContentPresenter
                  x:Name="Content"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  ContentSource="Header" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsSelected" Value="True">
                  <Setter TargetName="TabBorder" Property="Background" Value="{DynamicResource PlaylistTabSelectedBackgroundBrush}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplate">
          <Setter.Value>
            <DataTemplate>
              <userControls:EditableTabHeaderControl
                Margin="0"
                Padding="0"
                MouseLeftButtonDown="TabHeader_MouseLeftButtonDown"
                MouseRightButtonDown="TabHeader_MouseRightButtonDown"
                Style="{StaticResource EditableTabHeaderControl}">
                <userControls:EditableTabHeaderControl.ContextMenu>
                  <ContextMenu>
                    <MenuItem Click="MenuItem_NewPlaylist" Header="New Playlist" />
                    <MenuItem Click="MenuItem_NewPlaylistFromFolder" Header="New Playlist From Folder" />
                    <MenuItem Click="MenuItem_LoadPlaylistAsync" Header="Load Playlist" />
                    <Separator />
                    <MenuItem Click="MenuItem_AddFolder" Header="Add Folder" />
                    <MenuItem Click="MenuItem_AddFiles" Header="Add Files" />
                    <Separator />
                    <MenuItem Click="MenuItem_RenamePlaylist" Header="Rename Playlist" />
                    <Separator />
                    <MenuItem Click="MenuItem_RemovePlaylist" Header="Remove Playlist" />
                  </ContextMenu>
                </userControls:EditableTabHeaderControl.ContextMenu>
                <userControls:EditableTabHeaderControl.Content>
                  <Binding Mode="TwoWay" Path="Name" />
                </userControls:EditableTabHeaderControl.Content>
              </userControls:EditableTabHeaderControl>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="MenuItem">
        <Setter Property="BorderBrush" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="MenuItem">
              <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1">
                <ContentPresenter
                  Margin="4"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="{TemplateBinding Header}"
                  TextBlock.Foreground="{TemplateBinding Foreground}" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="IsHighlighted" Value="True">
            <Setter Property="Background" Value="{DynamicResource MenuMouseOverBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource MenuMouseOverForegroundBrush}" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{DynamicResource MenuMouseOverBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource MenuMouseOverForegroundBrush}" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="{DynamicResource MenuDisabledBrush}" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <DataTemplate x:Key="TabContentTemplate" DataType="{x:Type models:PlaylistTab}">
        <Grid>
          <DataGrid
            Name="PlaylistDataGrid"
            Margin="0,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            AllowDrop="True"
            AlternationCount="2"
            AutoGenerateColumns="False"
            Background="Transparent"
            BorderThickness="0"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserReorderColumns="True"
            EnableColumnVirtualization="False"
            EnableRowVirtualization="True"
            GridLinesVisibility="None"
            HorizontalScrollBarVisibility="Visible"
            IsReadOnly="True"
            ItemsSource="{Binding Tracks}"
            Loaded="DataGrid_Loaded"
            RowHeaderWidth="0"
            RowHeight="20"
            ScrollViewer.CanContentScroll="False"
            ScrollViewer.IsDeferredScrollingEnabled="False"
            SelectionChanged="TracksTable_OnSelectionChanged"
            SelectionMode="Single"
            SelectionUnit="FullRow"
            Sorting="TracksTable_OnSorting"
            VerticalScrollBarVisibility="Visible"
            VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Recycling">
          <b:Interaction.Triggers>
            <b:EventTrigger EventName="DragOver">
              <b:InvokeCommandAction Command="{Binding DataContext.DragOverCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" PassEventArgsToCommand="True" />
            </b:EventTrigger>
            <b:EventTrigger EventName="Drop">
              <b:InvokeCommandAction Command="{Binding DataContext.DropCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" PassEventArgsToCommand="True" />
            </b:EventTrigger>
          </b:Interaction.Triggers>
            <DataGrid.Resources>
              <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                  <ResourceDictionary Source="pack://application:,,,/LinkerPlayer;component/Styles/StylesRepository.xaml" />
                </ResourceDictionary.MergedDictionaries>
              </ResourceDictionary>
            </DataGrid.Resources>
            <DataGrid.Template>
              <ControlTemplate TargetType="{x:Type DataGrid}">
                <Border
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                  <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                    <ScrollViewer.Template>
                      <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                          </Grid.RowDefinitions>
                          <DataGridColumnHeadersPresenter
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="2" />
                          <ScrollContentPresenter Grid.Row="1" Grid.Column="0" />
                          <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="1"
                            Grid.Column="1"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Orientation="Vertical"
                            Style="{StaticResource CustomScrollBarStyle}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Value="{TemplateBinding VerticalOffset}" />
                          <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="2"
                            Grid.Column="0"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Orientation="Horizontal"
                            Style="{StaticResource CustomScrollBarStyle}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Value="{TemplateBinding HorizontalOffset}" />
                        </Grid>
                      </ControlTemplate>
                    </ScrollViewer.Template>
                    <ItemsPresenter />
                  </ScrollViewer>
                </Border>
              </ControlTemplate>
            </DataGrid.Template>
            <DataGrid.ColumnHeaderStyle>
              <Style TargetType="DataGridColumnHeader">
                <Style.Setters>
                  <Setter Property="Background" Value="{DynamicResource TrackListColumnHeaderBackgroundBrush}" />
                  <Setter Property="Foreground" Value="{DynamicResource TrackListColumnHeaderForegroundBrush}" />
                  <Setter Property="Padding" Value="6,4" />
                  <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}" />
                  <Setter Property="FontStyle" Value="Normal" />
                  <Setter Property="FontWeight" Value="Normal" />
                  <Setter Property="BorderBrush" Value="{DynamicResource PlaylistTabBorderBrush}" />
                  <Setter Property="BorderThickness" Value="1" />
                </Style.Setters>
              </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
              <Style TargetType="DataGridCell">
                <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="BorderBrush" Value="{DynamicResource TrackListItemBackgroundBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource TrackListItemForegroundBrush}" />
                <Style.Triggers>
                  <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource TrackListSelectedItemBackgroundBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource TrackListSelectedItemForegroundBrush}" />
                    <Setter Property="FontWeight" Value="Normal" />
                  </Trigger>
                </Style.Triggers>
              </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
              <Style TargetType="DataGridRow">
                <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="BorderBrush" Value="{DynamicResource TrackListItemBackgroundAlt1Brush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource TrackListItemForegroundBrush}" />
                <EventSetter Event="MouseDoubleClick" Handler="PlaylistRow_MouseDoubleClick" />
                <Style.Triggers>
                  <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{DynamicResource TrackListItemBackgroundAlt1Brush}" />
                  </Trigger>
                  <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{DynamicResource TrackListItemBackgroundAlt2Brush}" />
                  </Trigger>
                  <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource TrackListSelectedItemBackgroundBrush}" />
                    <Setter Property="FontWeight" Value="Normal" />
                  </Trigger>

                </Style.Triggers>
              </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
              <DataGridTextColumn
                Width="40"
                Header="#"
                IsReadOnly="True">
                <DataGridTextColumn.Binding>
                  <MultiBinding Converter="{StaticResource IndexConverter}">
                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGrid}" />
                    <Binding />
                  </MultiBinding>
                </DataGridTextColumn.Binding>
                <DataGridTextColumn.ElementStyle>
                  <Style TargetType="TextBlock">
                    <Setter Property="TextAlignment" Value="Right" />
                  </Style>
                </DataGridTextColumn.ElementStyle>
              </DataGridTextColumn>
              <DataGridTemplateColumn
                Width="20"
                MinWidth="{DynamicResource TrackTableImageSize}"
                Header="">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Grid>
                      <iconPacks:PackIconFontAwesome
                        x:Name="PlayImage"
                        Width="20"
                        Height="10"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource TrackListItemForegroundBrush}"
                        Kind="PlaySolid"
                        Visibility="{Binding State, Mode=OneWay, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static managedBass:PlaybackState.Playing}}" />
                      <iconPacks:PackIconMaterial
                        x:Name="PauseImage"
                        Width="20"
                        Height="10"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource TrackListItemForegroundBrush}"
                        Kind="Pause"
                        Visibility="{Binding State, Mode=OneWay, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static managedBass:PlaybackState.Paused}}" />
                    </Grid>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn
                Width="51"
                Header="Track"
                SortMemberPath="Track">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <TextBlock
                      Margin="5,0,5,0"
                      HorizontalAlignment="Right"
                      d:DataContext="{d:DesignData IMediaFile}"
                      FontSize="{DynamicResource FontSizeNormal}"
                      Text="{Binding Track}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn
                Width="300"
                Header="Title"
                SortMemberPath="Title">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <TextBlock
                      Margin="5,0,5,0"
                      d:DataContext="{d:DesignData IMediaFile}"
                      Text="{Binding Title, Mode=OneWay}"
                      ToolTip="{Binding Title}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn
                Width="200"
                Header="Artist"
                SortMemberPath="Artist">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <TextBlock
                      Margin="5,0,5,0"
                      d:DataContext="{d:DesignData IMediaFile}"
                      Text="{Binding Artist}"
                      ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn
                Width="300"
                Header="Album"
                SortMemberPath="Album">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <TextBlock
                      Margin="5,0,5,0"
                      d:DataContext="{d:DesignData IMediaFile}"
                      Text="{Binding Album}"
                      ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn
                Width="72"
                Header="Duration"
                SortMemberPath="Duration">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <TextBlock
                      Margin="5,0,5,0"
                      HorizontalAlignment="Right"
                      d:DataContext="{d:DesignData MediaFile}"
                      Text="{Binding Duration, Converter={StaticResource DurationConverter}}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
              <ContextMenu>
                <MenuItem Click="MenuItem_PlayTrack" Header="Play" />
                <MenuItem Click="MenuItem_RemoveTrack" Header="Remove" />
              </ContextMenu>
            </DataGrid.ContextMenu>
          </DataGrid>
        </Grid>
      </DataTemplate>
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid AllowDrop="True">

    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <TabControl
      Name="Tabs123"
      Grid.Row="0"
      Margin="0"
      Padding="0"
      HorizontalAlignment="Stretch"
      VerticalAlignment="Stretch"
      BorderThickness="0"
      ContentTemplate="{StaticResource TabContentTemplate}"
      ItemContainerStyle="{StaticResource TabItemContainerStyle}"
      ItemsSource="{Binding TabList}"
      SelectedIndex="{Binding SelectedTabIndex}"
      SelectionChanged="TabControl_SelectionChanged">
      <TabControl.ContextMenu>
        <ContextMenu>
          <MenuItem Click="MenuItem_NewPlaylist" Header="New Playlist" />
          <MenuItem Click="MenuItem_NewPlaylistFromFolder" Header="New Playlist From Folder" />
          <MenuItem Click="MenuItem_LoadPlaylistAsync" Header="Load Playlist" />
        </ContextMenu>
      </TabControl.ContextMenu>
    </TabControl>
    <!--<Border BorderBrush="red" BorderThickness="1" />-->
  </Grid>

</UserControl>
