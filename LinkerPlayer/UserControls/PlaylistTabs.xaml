<UserControl
  x:Class="LinkerPlayer.UserControls.PlaylistTabs"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converters="clr-namespace:LinkerPlayer.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:models="clr-namespace:LinkerPlayer.Models"
  xmlns:userControls="clr-namespace:LinkerPlayer.UserControls"
  xmlns:wave="clr-namespace:NAudio.Wave;assembly=NAudio.Core"
  d:DesignHeight="80"
  d:DesignWidth="800"
  mc:Ignorable="d">

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/LinkerPlayer;component/Styles/StylesRepository.xaml" />
        <ResourceDictionary Source="pack://application:,,,/LinkerPlayer;component/Styles/FontSizes/FontSizesNormal.xaml" />
        <ResourceDictionary Source="pack://application:,,,/LinkerPlayer;component/Themes/dark.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <converters:DurationConverter x:Key="DurationConverter" />
      <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />

      <Style x:Key="EditableTabHeaderControl" TargetType="{x:Type userControls:EditableTabHeaderControl}">
        <Setter Property="Template">
          <Setter.Value>

            <ControlTemplate TargetType="{x:Type userControls:EditableTabHeaderControl}">
              <Grid>
                <TextBox
                  x:Name="PART_TabHeader"
                  Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=TwoWay}"
                  Visibility="Collapsed" />
                <TextBlock x:Name="PART_TextBlock" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=TwoWay}" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsInEditMode" Value="True">
                  <Trigger.Setters>
                    <Setter TargetName="PART_TabHeader" Property="Visibility" Value="Visible" />
                    <Setter TargetName="PART_TextBlock" Property="Visibility" Value="Collapsed" />
                  </Trigger.Setters>
                </Trigger>
              </ControlTemplate.Triggers>

            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="ItemContainerStyle" TargetType="TabItem">
        <Setter Property="HeaderTemplate">
          <Setter.Value>
            <DataTemplate>
              <userControls:EditableTabHeaderControl
                MouseLeftButtonDown="TabHeader_MouseLeftButtonDown"
                MouseRightButtonDown="TabHeader_MouseRightButtonDown"
                Style="{StaticResource EditableTabHeaderControl}">
                <userControls:EditableTabHeaderControl.ContextMenu>
                  <ContextMenu>
                    <MenuItem Click="MenuItem_NewPlaylist" Header="New Playlist" />
                    <MenuItem Click="MenuItem_NewPlaylistFromFolder" Header="New Playlist From Folder" />
                    <MenuItem Click="MenuItem_LoadPlaylist" Header="Load Playlist" />
                    <Separator />
                    <MenuItem Click="MenuItem_AddFolder" Header="Add Folder" />
                    <MenuItem Click="MenuItem_AddFiles" Header="Add Files" />
                    <Separator />
                    <MenuItem Click="MenuItem_RenamePlaylist" Header="Rename Playlist" />
                    <Separator />
                    <MenuItem Click="MenuItem_RemovePlaylist" Header="Remove Playlist" />
                  </ContextMenu>
                </userControls:EditableTabHeaderControl.ContextMenu>
                <userControls:EditableTabHeaderControl.Content>
                  <Binding Mode="TwoWay" Path="Name" />
                </userControls:EditableTabHeaderControl.Content>
              </userControls:EditableTabHeaderControl>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <DataTemplate x:Key="ContentTemplate" DataType="{x:Type models:PlaylistTab}">
        <DataGrid
          Name="TracksTable"
          Width="Auto"
          Height="Auto"
          MaxWidth="3840"
          MaxHeight="2160"
          Margin="1,0,0,0"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          AlternationCount="2"
          AutoGenerateColumns="False"
          Background="Transparent"
          BorderBrush="#424242"
          BorderThickness="1"
          CanUserAddRows="False"
          CanUserDeleteRows="False"
          CanUserReorderColumns="True"
          EnableColumnVirtualization="True"
          EnableRowVirtualization="True"
          GridLinesVisibility="None"
          IsReadOnly="True"
          ItemsSource="{Binding Tracks, IsAsync=True}"
          Loaded="DataGrid_Loaded"
          RowHeaderWidth="0"
          RowHeight="25"
          ScrollViewer.CanContentScroll="True"
          ScrollViewer.HorizontalScrollBarVisibility="Auto"
          ScrollViewer.VerticalScrollBarVisibility="Auto"
          SelectionChanged="TracksTable_OnSelectionChanged"
          SelectionMode="Single"
          SelectionUnit="FullRow"
          Sorting="TracksTable_OnSorting"
          VirtualizingStackPanel.IsVirtualizing="True"
          VirtualizingStackPanel.VirtualizationMode="Recycling">

          <DataGrid.ColumnHeaderStyle>
            <Style TargetType="DataGridColumnHeader">
              <Style.Setters>
                <Setter Property="Background" Value="{DynamicResource TrackListColumnHeaderBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TrackListColumnHeaderForegroundBrush}" />
                <Setter Property="Padding" Value="6" />
                <Setter Property="FontSize" Value="{DynamicResource FontSizeBigger}" />
                <Setter Property="BorderBrush" Value="{DynamicResource FirstLightBrush}" />
                <Setter Property="BorderThickness" Value="0,0,0,0.5" />
              </Style.Setters>
            </Style>
          </DataGrid.ColumnHeaderStyle>

          <DataGrid.CellStyle>
            <Style TargetType="DataGridCell">
              <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}" />
              <Setter Property="FontStyle" Value="Normal" />
              <Setter Property="FontWeight" Value="Normal" />
              <Setter Property="BorderBrush" Value="{DynamicResource TrackListItemBackgroundBrush}" />
              <Setter Property="BorderThickness" Value="0" />
              <Setter Property="VerticalAlignment" Value="Center" />
              <Setter Property="Foreground" Value="{DynamicResource TrackListItemForegroundBrush}" />
              <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                  <Setter Property="Background" Value="{DynamicResource TrackListSelectedItemBackgroundBrush}" />
                  <Setter Property="Foreground" Value="{DynamicResource TrackListSelectedItemForegroundBrush}" />
                  <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </DataGrid.CellStyle>

          <DataGrid.RowStyle>
            <Style TargetType="DataGridRow">
              <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}" />
              <Setter Property="FontStyle" Value="Normal" />
              <Setter Property="FontWeight" Value="Light" />
              <Setter Property="BorderBrush" Value="{DynamicResource TrackListItemBackgroundAlt1Brush}" />
              <Setter Property="BorderThickness" Value="0" />
              <Setter Property="VerticalAlignment" Value="Center" />
              <Setter Property="Foreground" Value="{DynamicResource TrackListItemForegroundBrush}" />
              <EventSetter Event="MouseDoubleClick" Handler="PlaylistRow_MouseDoubleClick" />
              <Style.Triggers>

                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                  <Setter Property="Background" Value="{DynamicResource TrackListItemBackgroundAlt1Brush}" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                  <Setter Property="Background" Value="{DynamicResource TrackListItemBackgroundAlt2Brush}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                  <Setter Property="Background" Value="{DynamicResource TrackListSelectedItemBackgroundBrush}" />
                  <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
                <Trigger Property="IsVisible" Value="False">
                  <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>

              </Style.Triggers>
            </Style>
          </DataGrid.RowStyle>

          <DataGrid.Columns>
            <DataGridTemplateColumn
              Width="Auto"
              MinWidth="{DynamicResource TrackTableImageSize}"
              Header="">

              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <Grid>
                    <iconPacks:PackIconFontAwesome
                      x:Name="PlayImage"
                      Width="20"
                      Height="10"
                      Margin="5,0,0,0"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Foreground="{StaticResource TrackListItemForegroundBrush}"
                      Kind="PlaySolid"
                      Visibility="{Binding State, Mode=OneWay, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static wave:PlaybackState.Playing}}" />

                    <iconPacks:PackIconMaterial
                      x:Name="PauseImage"
                      Width="20"
                      Height="10"
                      Margin="5,0,0,0"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Foreground="{StaticResource TrackListItemForegroundBrush}"
                      Kind="Pause"
                      Visibility="{Binding State, Mode=OneWay, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static wave:PlaybackState.Paused}}" />
                  </Grid>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn
              Width="Auto"
              Header="Track"
              SortMemberPath="Track">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <TextBlock
                    Margin="5,0,5,0"
                    HorizontalAlignment="Right"
                    d:DataContext="{d:DesignData IMediaFile}"
                    FontSize="{DynamicResource FontSizeNormal}"
                    Text="{Binding Track}" />
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn
              Width="20*"
              Header="Title"
              SortMemberPath="Title">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <TextBlock
                    Margin="5,0,5,0"
                    d:DataContext="{d:DesignData IMediaFile}"
                    FontSize="{DynamicResource FontSizeNormal}"
                    Text="{Binding Title, Mode=OneWay}"
                    ToolTip="{Binding Title}">
                    <!--<TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Flag}" Value="0">
                        <Setter Property="Foreground" Value="{DynamicResource TrackListItemForegroundColor}" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Flag}" Value="1">
                        <Setter Property="Foreground" Value="Violet" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Flag}" Value="2">
                        <Setter Property="Foreground" Value="Gray" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Flag}" Value="3">
                        <Setter Property="Foreground" Value="Green" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Flag}" Value="4">
                        <Setter Property="Foreground" Value="Blue" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Flag}" Value="5">
                        <Setter Property="Foreground" Value="Red" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Flag}" Value="6">
                        <Setter Property="Foreground" Value="Orange" />
                      </DataTrigger>
                    </Style.Triggers>

                    -->
                    <!--  OK = 0, Tagged, Hidden, Easy, New, Failures, Unknown  -->
                    <!--
                  </Style>
                </TextBlock.Style>-->
                  </TextBlock>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn
              Width="20*"
              Header="Artist"
              SortMemberPath="Artists">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <TextBlock
                    Margin="5,0,5,0"
                    d:DataContext="{d:DesignData IMediaFile}"
                    FontSize="{DynamicResource FontSizeNormal}"
                    Text="{Binding Artists}"
                    ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn
              Width="20*"
              Header="Album"
              SortMemberPath="Album">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <TextBlock
                    Margin="5,0,5,0"
                    d:DataContext="{d:DesignData IMediaFile}"
                    FontSize="{DynamicResource FontSizeNormal}"
                    Text="{Binding Album}"
                    ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn
              Width="Auto"
              MinWidth="68"
              Header="Length"
              SortMemberPath="Duration">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <TextBlock
                    Margin="5,0,5,0"
                    d:DataContext="{d:DesignData MediaFile}"
                    FontSize="{DynamicResource FontSizeNormal}"
                    Text="{Binding Duration, Converter={StaticResource DurationConverter}}" />
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

          </DataGrid.Columns>
          <DataGrid.ContextMenu>
            <ContextMenu>
              <MenuItem Click="MenuItem_PlayTrack" Header="Play" />
              <MenuItem Click="MenuItem_RemoveTrack" Header="Remove" />
            </ContextMenu>
          </DataGrid.ContextMenu>
        </DataGrid>
      </DataTemplate>
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid>
    <TabControl
      Grid.Row="0"
      Margin="0,0,5,0"
      ContentTemplate="{StaticResource ContentTemplate}"
      ItemContainerStyle="{StaticResource ItemContainerStyle}"
      ItemsSource="{Binding TabList}"
      SelectionChanged="TabControl_SelectionChanged">
      <TabControl.ContextMenu>
        <ContextMenu>
          <MenuItem Click="MenuItem_NewPlaylist" Header="New Playlist" />
          <MenuItem Click="MenuItem_NewPlaylistFromFolder" Header="New Playlist From Folder" />
          <MenuItem Click="MenuItem_LoadPlaylist" Header="Load Playlist" />
        </ContextMenu>
      </TabControl.ContextMenu>
    </TabControl>
  </Grid>

</UserControl>