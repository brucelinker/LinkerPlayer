<UserControl
  x:Class="LinkerPlayer.UserControls.PlayerControls"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converters="clr-namespace:LinkerPlayer.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:wave="clr-namespace:ManagedBass;assembly=ManagedBass"
  x:Name="RootControl"
  d:DesignHeight="105"
  d:DesignWidth="1000"
  Background="{DynamicResource PlayerBackgroundBrush}"
  UseLayoutRounding="True"
  mc:Ignorable="d">

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/LinkerPlayer;component/Styles/CircularButton.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <converters:EnumBooleanConverter x:Key="PlayerStateToIconConverter">
        <converters:EnumBooleanConverter.TrueValue>
          <iconPacks:PackIconMaterial
            Width="19"
            Height="19"
            Margin="0"
            Kind="Pause" />
        </converters:EnumBooleanConverter.TrueValue>
        <converters:EnumBooleanConverter.FalseValue>
          <iconPacks:PackIconMaterial
            Width="19"
            Height="19"
            Margin="4,0,0,0"
            Kind="Play" />
        </converters:EnumBooleanConverter.FalseValue>
      </converters:EnumBooleanConverter>
      <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    </ResourceDictionary>
  </UserControl.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="70" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <Grid.ColumnDefinitions>
      <!--  Playback buttons (fixed width)  -->
      <ColumnDefinition Width="Auto" />
      <!--  CurrentTrackName, CurrentTime, Progress Slider, TotalTime (scales with window width)  -->
      <ColumnDefinition Width="*" />
      <!--  Volume Mute and Volume Slider (fixed width)  -->
      <ColumnDefinition Width="Auto" />
      <!--  Shuffle and Equalizer buttons (fixed width)  -->
      <!--<ColumnDefinition Width="Auto" />-->
    </Grid.ColumnDefinitions>

    <Grid>
      <Border BorderBrush="Transparent" BorderThickness="1">
        <StackPanel
          Margin="25,4,25,0"
          VerticalAlignment="Center"
          Orientation="Horizontal">

          <!--  Prev Button  -->
          <Button
            Name="PrevButton"
            Width="36"
            Height="36"
            Margin="0,0,5,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            d:Foreground="Transparent"
            Command="{Binding PrevCommand}"
            Content="{iconPacks:Material SkipPrevious,
                                         Width=13,
                                         Height=13}"
            Foreground="{DynamicResource PlayerForegroundBrush}"
            Style="{StaticResource LinkerCircleButton}"
            ToolTip="Previous Track" />

          <!--  Play Button  -->
          <Button
            x:Name="PlayButton"
            Width="55"
            Height="55"
            Margin="5,0,5,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            d:Content="{iconPacks:PackIconMaterial Kind=Play,
                                                   Width=19,
                                                   Height=19,
                                                   Margin=4 0 0 0}"
            d:Foreground="Transparent"
            Command="{Binding PlayPauseCommand}"
            Content="{Binding State, Mode=TwoWay, Converter={StaticResource PlayerStateToIconConverter}, ConverterParameter={x:Static wave:PlaybackState.Playing}}"
            Foreground="{DynamicResource PlayerForegroundBrush}"
            Style="{StaticResource LinkerCircleButton}" />

          <!--  Stop Button  -->
          <Button
            Name="StopButton"
            Width="36"
            Height="36"
            Margin="5,0,5,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            d:Foreground="Transparent"
            Command="{Binding StopCommand}"
            Content="{iconPacks:Material Stop,
                                         Width=12,
                                         Height=12}"
            Foreground="{DynamicResource PlayerForegroundBrush}"
            Style="{StaticResource LinkerCircleButton}"
            ToolTip="Stop" />

          <!--  Next Button  -->
          <Button
            Name="NextButton"
            Width="36"
            Height="36"
            Margin="5,0,5,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            d:Foreground="Transparent"
            Command="{Binding NextCommand}"
            Content="{iconPacks:Material SkipNext,
                                         Width=13,
                                         Height=13}"
            Foreground="{DynamicResource PlayerForegroundBrush}"
            Style="{StaticResource LinkerCircleButton}"
            ToolTip="Next File (j)" />
        </StackPanel>
      </Border>
    </Grid>

    <Grid Grid.Row="0" Grid.Column="1">
      <Border BorderBrush="Transparent" BorderThickness="1">
        <Grid Margin="10,26,10,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <!--  CurrentTime  -->
            <ColumnDefinition Width="*" />
            <!--  Progress Slider  -->
            <ColumnDefinition Width="Auto" />
            <!--  TotalTime  -->
          </Grid.ColumnDefinitions>

          <!--  Current Time  -->
          <TextBlock
            Name="CurrentTime"
            Grid.Column="0"
            Padding="0,0,10,0"
            d:Foreground="Transparent"
            FontSize="16"
            FontWeight="Light"
            Foreground="{DynamicResource PlayerForegroundBrush}"
            Text="0:00" />

          <!--  Player Slider  -->
          <Slider
            x:Name="SeekBar"
            Grid.Column="1"
            Margin="5,0,5,0"
            Panel.ZIndex="1"
            Maximum="100"
            Style="{StaticResource CustomHorizontalSlider}"
            ValueChanged="SeekBar_ValueChanged" />

          <!--  Total Time  -->
          <TextBlock
            Name="TotalTime"
            Grid.Column="2"
            Padding="10,0,0,0"
            d:Foreground="Transparent"
            FontSize="16"
            FontWeight="Light"
            Foreground="{DynamicResource PlayerForegroundBrush}">
            0:00
          </TextBlock>
        </Grid>
      </Border>
    </Grid>

    <!--  Volume Group  -->
    <Grid Grid.Row="0" Grid.Column="2">
      <StackPanel Margin="20,8,5,5" Orientation="Horizontal">

        <!--  Mute Button  -->
        <ToggleButton
          Name="MuteButton"
          Width="36"
          Height="36"
          Margin="4,0,5,0"
          d:Content="{iconPacks:PackIconOcticons Kind=Unmute,
                                                 Width=15,
                                                 Height=15}"
          d:IsChecked="False"
          IsChecked="{Binding IsMuted, Mode=TwoWay}"
          ToolTip="Mute (m)">
          <ToggleButton.Style>
            <Style BasedOn="{StaticResource LinkerCircleToggleButton}" TargetType="ToggleButton">
              <Setter Property="Content" Value="{iconPacks:Octicons Unmute, Width=15, Height=15}" />
              <Setter Property="Foreground" Value="{DynamicResource PlayerForegroundBrush}" />
              <Style.Triggers>
                <Trigger Property="IsChecked" Value="true">
                  <Setter Property="Content" Value="{iconPacks:Octicons Mute, Width=15, Height=15}" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </ToggleButton.Style>
        </ToggleButton>

        <!--  Volume Slider  -->
        <Slider
          x:Name="VolumeSlider"
          Width="100"
          Margin="5,0,20,0"
          VerticalAlignment="Center"
          Maximum="100"
          Minimum="0"
          Style="{StaticResource CustomHorizontalSlider}"
          Value="{Binding VolumeSliderValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />


        <!--  Shuffle Mode Button  -->
        <ToggleButton
          Name="ShuffleModeButton"
          Width="36"
          Height="36"
          Margin="10,0,5,0"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          d:Content="{iconPacks:PackIconMaterial Kind=ShuffleDisabled,
                                                 Width=15,
                                                 Height=15}"
          IsChecked="{Binding ShuffleMode, Mode=TwoWay}"
          ToolTip="Shuffle (s)">
          <ToggleButton.Style>
            <Style BasedOn="{StaticResource LinkerCircleToggleButton}" TargetType="ToggleButton">
              <Setter Property="Content" Value="{iconPacks:Material ShuffleDisabled, Width=15, Height=15}" />
              <Setter Property="Foreground" Value="{DynamicResource PlayerForegroundBrush}" />
              <Style.Triggers>
                <Trigger Property="IsChecked" Value="true">
                  <Setter Property="Content" Value="{iconPacks:Entypo Shuffle, Width=17, Height=17}" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </ToggleButton.Style>
        </ToggleButton>

        <!--  Equalizer Button  -->
        <Button
          Name="EqualizerButton"
          Width="36"
          Height="36"
          Margin="5,0,25,0"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          d:Foreground="Transparent"
          Click="OnEqualizerButton_Click"
          Content="{iconPacks:Fontisto Equalizer,
                                       Width=18,
                                       Height=18}"
          Foreground="{DynamicResource PlayerForegroundBrush}"
          Style="{StaticResource LinkerCircleButton}"
          ToolTip="Equalizer" />
      </StackPanel>
    </Grid>

    <Grid
      Grid.Row="1"
      Grid.Column="0"
      Grid.ColumnSpan="3"
      VerticalAlignment="Bottom">
      <Border BorderBrush="Transparent" BorderThickness="1">
        <Grid
          Margin="6,0,6,0"
          VerticalAlignment="Bottom"
          Background="Transparent">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="2*" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="1*" />
          </Grid.RowDefinitions>

          <!--  Status text  -->
          <TextBlock
            Name="StatusText"
            Grid.RowSpan="2"
            Grid.Column="0"
            Width="Auto"
            Margin="5,5,0,0"
            VerticalAlignment="Top"
            FontSize="13"
            FontWeight="Light"
            Text="{Binding Status}" />

          <Border
            Grid.Row="0"
            Grid.Column="1"
            BorderBrush="Transparent"
            BorderThickness="1">
            <TextBlock
              x:Name="ProgressInfo"
              Grid.Row="0"
              Grid.Column="1"
              Width="Auto"
              Margin="5,0. 5, 0"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              FontSize="13"
              FontWeight="Light" />
          </Border>

          <!--  Progress bar  -->
          <ProgressBar
            x:Name="TheProgressBar"
            Grid.Row="1"
            Grid.Column="1"
            Width="Auto"
            Height="6"
            Margin="5,0"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="1"
            Foreground="{DynamicResource ControlAccentDarkBrush}"
            Minimum="0"
            Visibility="Visible" />

          <!--  Another status text or whatever else you want  -->
          <TextBlock
            x:Name="Info"
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="2"
            Width="Auto"
            Margin="5,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="13"
            FontWeight="Light" />

        </Grid>
      </Border>
    </Grid>
  </Grid>
</UserControl>
