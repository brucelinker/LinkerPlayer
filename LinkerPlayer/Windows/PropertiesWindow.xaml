<Window
  x:Class="LinkerPlayer.Windows.PropertiesWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
  xmlns:local="clr-namespace:LinkerPlayer.Windows"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  Title="PropertiesWindow"
  Width="500"
  Height="800"
  WindowStyle="None"
  mc:Ignorable="d">

  <WindowChrome.WindowChrome>
    <WindowChrome CaptionHeight="25" />
  </WindowChrome.WindowChrome>

  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/LinkerPlayer;component/Styles/StylesRepository.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <!--  Converters  -->
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
      <local:InverseBooleanConverter x:Key="InverseBooleanConverter" />
      <local:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />
      <local:BpmRowVisibilityConverter x:Key="BpmRowVisibilityConverter" />
      <local:InverseBpmRowVisibilityConverter x:Key="InverseBpmRowVisibilityConverter" />

      <!--  Properties Window Specific DataGrid Cell Style (matches transparent theme)  -->
      <Style
        x:Key="PropertiesWindowDataGridCellStyle"
        BasedOn="{StaticResource SharedDataGridCellStyle}"
        TargetType="DataGridCell">
        <Setter Property="Foreground" Value="{DynamicResource TitleBarForegroundBrush}" />
        <Style.Triggers>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Background" Value="{DynamicResource TrackListSelectedItemBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource TrackListSelectedItemForegroundBrush}" />
            <Setter Property="FontWeight" Value="Normal" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <!--  Properties Window Specific DataGrid Row Style (Transparent Background)  -->
      <Style
        x:Key="PropertiesWindowDataGridRowStyle"
        BasedOn="{StaticResource SharedDataGridRowStyle}"
        TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TitleBarForegroundBrush}" />
        <Style.Triggers>
          <Trigger Property="ItemsControl.AlternationIndex" Value="1">
            <Setter Property="Background" Value="Transparent" />
          </Trigger>
          <Trigger Property="ItemsControl.AlternationIndex" Value="0">
            <Setter Property="Background" Value="Transparent" />
          </Trigger>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Background" Value="{DynamicResource TrackListSelectedItemBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource TrackListSelectedItemForegroundBrush}" />
            <Setter Property="FontWeight" Value="Normal" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </ResourceDictionary>
  </Window.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="45" />
      <RowDefinition />
    </Grid.RowDefinitions>

    <Grid.Background>
      <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{DynamicResource MainWindowGradientStartColor}" />
        <GradientStop Offset=".1" Color="{DynamicResource MainWindowGradientStartColor}" />
        <GradientStop Offset="1" Color="{DynamicResource MainWindowGradientStartColor}" />
      </LinearGradientBrush>
    </Grid.Background>

    <Grid Grid.Row="0">
      <TextBlock
        Margin="12,2,0,0"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        d:Foreground=" White"
        FontSize="{DynamicResource FontSizeTitle}"
        FontWeight="Light"
        Foreground="{DynamicResource TitleBarForegroundBrush}">
        <TextBlock.Style>
          <Style TargetType="TextBlock">
            <Setter Property="Text" Value="Properties" />
            <Style.Triggers>
              <DataTrigger Binding="{Binding IsMultipleSelection}" Value="True">
                <Setter Property="Text" Value="{Binding SelectedFilesCount, StringFormat='Properties - {0} files selected'}" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </TextBlock.Style>
      </TextBlock>

      <StackPanel
        HorizontalAlignment="Right"
        VerticalAlignment="Top"
        Background="{DynamicResource TitleBarBackgroundBrush}"
        Orientation="Horizontal"
        WindowChrome.IsHitTestVisibleInChrome="True">

        <Button
          Name="CloseButton"
          Background="{DynamicResource TitleBarBackgroundBrush}"
          Click="CloseButton_Click"
          Content="{iconPacks:Material Close,
                                       Width=14,
                                       Height=14}"
          Style="{DynamicResource CloseButton}" />

      </StackPanel>
    </Grid>

    <Grid Grid.Row="1">
      <DockPanel>
        <StackPanel
          Margin="10,10,10,10"
          HorizontalAlignment="Right"
          DockPanel.Dock="Bottom"
          Orientation="Horizontal">
          <Button
            Width="75"
            Margin="0,0,5,0"
            Command="{Binding OkCommand}"
            Content="OK" />
          <Button
            Width="75"
            Margin="0,0,5,0"
            Command="{Binding ApplyCommand}"
            Content="Apply"
            IsEnabled="{Binding HasUnsavedChanges}" />
          <Button
            Width="75"
            Command="{Binding CancelCommand}"
            Content="Cancel" />
        </StackPanel>
        <ScrollViewer
          x:Name="WindowScrollViewer"
          HorizontalScrollBarVisibility="Disabled"
          VerticalScrollBarVisibility="Auto">
          <ScrollViewer.Resources>
            <Style BasedOn="{StaticResource CustomScrollBarStyle}" TargetType="ScrollBar" />
          </ScrollViewer.Resources>
          <Grid Margin="10">
            <Grid.RowDefinitions>
              <!--  Metadata  -->
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <!--  Comment  -->
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <!--  Properties  -->
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <!--  ReplayGain  -->
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <!--  Picture  -->
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <!--  Lyrics  -->
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  Metadata Title with Bar  -->
            <Grid Grid.Row="0" Margin="0,0,0,5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <TextBlock
                VerticalAlignment="Center"
                FontSize="{DynamicResource FontSizeHeading}"
                FontWeight="Normal"
                Foreground="{DynamicResource ControlAccentLightBrush}"
                Text="Metadata" />
              <Rectangle
                Grid.Column="1"
                Height="1.5"
                Margin="8,3,0,0"
                VerticalAlignment="Center"
                Fill="{DynamicResource ControlAccentLightBrush}" />
            </Grid>

            <DataGrid
              x:Name="MetadataDataGrid"
              Grid.Row="1"
              Height="Auto"
              MinWidth="400"
              MaxHeight="Infinity"
              Margin="0,0,0,4"
              AutoGenerateColumns="False"
              BeginningEdit="MetadataDataGrid_BeginningEdit"
              CanUserAddRows="False"
              CanUserResizeRows="False"
              CellStyle="{StaticResource PropertiesWindowDataGridCellStyle}"
              ColumnHeaderStyle="{StaticResource SharedDataGridColumnHeaderStyle}"
              HorizontalScrollBarVisibility="Disabled"
              ItemsSource="{Binding MetadataItems}"
              PreviewMouseWheel="DataGrid_PreviewMouseWheel"
              RowStyle="{StaticResource PropertiesWindowDataGridRowStyle}"
              SelectionChanged="DataGrid_SelectionChanged"
              Style="{StaticResource SharedDataGridStyle}"
              VerticalScrollBarVisibility="Disabled">

              <DataGrid.Columns>
                <DataGridTextColumn
                  Width="240"
                  MinWidth="100"
                  Binding="{Binding Name}"
                  CanUserResize="True"
                  Header="Name"
                  IsReadOnly="True" />
                <DataGridTemplateColumn
                  Width="*"
                  MinWidth="100"
                  CanUserResize="True"
                  Header="Value">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <Grid>
                        <TextBlock Text="{Binding Value}" Visibility="{Binding Name, Converter={StaticResource BpmRowVisibilityConverter}}" />

                        <!--  BPM Detection UI - only visible for "Beats Per Minute" row  -->
                        <Grid Visibility="{Binding Name, Converter={StaticResource InverseBpmRowVisibilityConverter}}">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                          </Grid.ColumnDefinitions>

                          <TextBlock
                            Grid.Column="0"
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            Text="{Binding Value}" />

                          <!--  Hyperlink-style Detect button  -->
                          <Button
                            Grid.Column="1"
                            Padding="0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{Binding DataContext.DetectBpmCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                            Cursor="Hand"
                            FontSize="14"
                            ToolTip="Analyze audio file to detect beats per minute">
                            <TextBlock
                              Foreground="{DynamicResource TrackListHyperlinkForegroundBrush}"
                              Text="Detect BPM..."
                              TextDecorations="Underline" />
                            <Button.Style>
                              <Style TargetType="Button">
                                <Setter Property="Template">
                                  <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                      <ContentPresenter />
                                    </ControlTemplate>
                                  </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                  <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.7" />
                                  </Trigger>
                                </Style.Triggers>
                              </Style>
                            </Button.Style>
                          </Button>

                          <!--  Progress indicator when detecting  -->
                          <StackPanel
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Visibility="{Binding DataContext.IsBpmDetecting, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ProgressBar
                              Width="80"
                              Height="16"
                              Margin="0,0,8,0"
                              Maximum="100"
                              Minimum="0"
                              Value="{Binding DataContext.BpmDetectionProgress, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                            <TextBlock
                              VerticalAlignment="Center"
                              FontSize="10"
                              Foreground="{DynamicResource TitleBarForegroundBrush}"
                              Text="{Binding DataContext.BpmDetectionStatus, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                          </StackPanel>

                          <Button
                            Grid.Column="2"
                            Width="50"
                            Height="22"
                            Padding="4,2"
                            Command="{Binding DataContext.CancelBpmDetectionCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                            Content="Cancel"
                            FontSize="10"
                            Visibility="{Binding DataContext.IsBpmDetecting, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                      </Grid>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                  <DataGridTemplateColumn.CellEditingTemplate>
                    <DataTemplate>
                      <TextBox IsEnabled="{Binding IsEditable}" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
              </DataGrid.Columns>
            </DataGrid>

            <!--  Comment Section (Lyrics-style)  -->
            <Grid Grid.Row="2" Margin="0,10,0,5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <TextBlock
                VerticalAlignment="Center"
                FontSize="{DynamicResource FontSizeHeading}"
                FontWeight="Normal"
                Foreground="{DynamicResource ControlAccentLightBrush}"
                Text="Comment" />
              <Rectangle
                Grid.Column="1"
                Height="1.5"
                Margin="8,3,0,0"
                VerticalAlignment="Center"
                Fill="{DynamicResource ControlAccentLightBrush}" />
            </Grid>
            <TextBox
              x:Name="CommentTextBox"
              Grid.Row="3"
              MaxHeight="150"
              Margin="0,0,0,10"
              Padding="8"
              AcceptsReturn="True"
              BorderThickness="0"
              FontSize="{DynamicResource FontSizeNormal}"
              GotFocus="CommentTextBox_GotFocus"
              IsReadOnly="True"
              LostFocus="CommentTextBox_LostFocus"
              MouseDoubleClick="CommentTextBox_MouseDoubleClick"
              PreviewKeyDown="CommentTextBox_PreviewKeyDown"
              PreviewMouseWheel="CommentTextBox_PreviewMouseWheel"
              Text="{Binding CommentItem.Value, UpdateSourceTrigger=PropertyChanged}"
              TextWrapping="Wrap"
              VerticalScrollBarVisibility="Auto">
              <TextBox.Style>
                <Style TargetType="TextBox">
                  <Setter Property="Cursor" Value="Hand" />
                  <Setter Property="Background" Value="Transparent" />
                  <Setter Property="Foreground" Value="{DynamicResource TitleBarForegroundBrush}" />
                  <Style.Triggers>
                    <Trigger Property="IsReadOnly" Value="False">
                      <Setter Property="Cursor" Value="IBeam" />
                      <Setter Property="Background" Value="#FFFFFF" />
                      <Setter Property="Foreground" Value="#000000" />
                      <Setter Property="BorderThickness" Value="2" />
                      <Setter Property="BorderBrush" Value="#0078D4" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </TextBox.Style>
            </TextBox>

            <!--  Properties Title with Bar  -->
            <Grid Grid.Row="4" Margin="0,0,0,5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <TextBlock
                VerticalAlignment="Center"
                FontSize="{DynamicResource FontSizeHeading}"
                FontWeight="Normal"
                Foreground="{DynamicResource SpectrumPeakBrush}"
                Text="Properties" />
              <Rectangle
                Grid.Column="1"
                Height="1.5"
                Margin="8,3,0,0"
                VerticalAlignment="Center"
                Fill="{DynamicResource SpectrumPeakBrush}" />
            </Grid>

            <DataGrid
              x:Name="PropertiesDataGrid"
              Grid.Row="5"
              Height="Auto"
              MinWidth="400"
              MaxHeight="Infinity"
              Margin="0,0,0,10"
              AutoGenerateColumns="False"
              CanUserAddRows="False"
              CanUserResizeRows="False"
              CellStyle="{StaticResource PropertiesWindowDataGridCellStyle}"
              ColumnHeaderStyle="{StaticResource SharedDataGridColumnHeaderStyle}"
              HorizontalScrollBarVisibility="Disabled"
              ItemsSource="{Binding PropertyItems}"
              PreviewMouseWheel="DataGrid_PreviewMouseWheel"
              RowStyle="{StaticResource PropertiesWindowDataGridRowStyle}"
              SelectionChanged="DataGrid_SelectionChanged"
              Style="{StaticResource SharedDataGridStyle}"
              VerticalScrollBarVisibility="Disabled">

              <DataGrid.Columns>
                <DataGridTextColumn
                  Width="240"
                  MinWidth="100"
                  Binding="{Binding Name}"
                  CanUserResize="True"
                  Header="Name"
                  IsReadOnly="True" />
                <DataGridTextColumn
                  Width="*"
                  MinWidth="100"
                  Binding="{Binding Value}"
                  CanUserResize="True"
                  Header="Value"
                  IsReadOnly="True" />
              </DataGrid.Columns>
            </DataGrid>

            <!--  ReplayGain Title with Bar  -->
            <Grid Grid.Row="6" Margin="0,0,0,5">
    <Grid.ColumnDefinitions>
       <ColumnDefinition Width="Auto" />
         <ColumnDefinition Width="*" />
    <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
         
           <TextBlock
             Grid.Column="0"
                VerticalAlignment="Center"
      FontSize="{DynamicResource FontSizeHeading}"
     FontWeight="Normal"
      Foreground="{DynamicResource ControlAccentLightBrush}"
   Text="ReplayGain" />
   
   <Rectangle
                Grid.Column="1"
                Height="1.5"
         Margin="8,3,8,0"
       VerticalAlignment="Center"
         Fill="{DynamicResource ControlAccentLightBrush}" />
           

           <!--  ReplayGain Calculation Controls  -->
           <StackPanel
     Grid.Column="2"
          HorizontalAlignment="Right"
    VerticalAlignment="Center"
   Orientation="Horizontal">
    
       <!--  Calculate Button (hyperlink style, similar to BPM)  -->
          <Button
           Padding="0"
                  HorizontalAlignment="Right"
       Background="Transparent"
           BorderThickness="0"
        Command="{Binding CalculateReplayGainCommand}"
        Cursor="Hand"
           FontSize="12"
      ToolTip="Analyze audio file to calculate ReplayGain values"
       Visibility="{Binding IsReplayGainCalculating, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
                <TextBlock
    Foreground="{DynamicResource TrackListHyperlinkForegroundBrush}"
 Text="Calculate..."
       TextDecorations="Underline" />
  <Button.Style>
<Style TargetType="Button">
    <Setter Property="Template">
               <Setter.Value>
         <ControlTemplate TargetType="Button">
  <ContentPresenter />
    </ControlTemplate>
  </Setter.Value>
       </Setter>
          <Style.Triggers>
               <Trigger Property="IsMouseOver" Value="True">
      <Setter Property="Opacity" Value="0.7" />
 </Trigger>
         </Style.Triggers>
  </Style>
   </Button.Style>
          </Button>

  <!--  Progress indicator when calculating  -->
       <StackPanel
               Orientation="Horizontal"
       Visibility="{Binding IsReplayGainCalculating, Converter={StaticResource BooleanToVisibilityConverter}}">
    <ProgressBar
      Width="80"
     Height="16"
        Margin="0,0,8,0"
          Maximum="100"
    Minimum="0"
    Value="{Binding ReplayGainCalculationProgress}" />
       <TextBlock
             VerticalAlignment="Center"
       FontSize="10"
               Foreground="{DynamicResource TitleBarForegroundBrush}"
   Text="{Binding ReplayGainCalculationStatus}" />
   <Button
        Width="50"
      Height="22"
      Margin="8,0,0,0"
         Padding="4,2"
     Command="{Binding CancelReplayGainCalculationCommand}"
          Content="Cancel"
        FontSize="10" />
     </StackPanel>
              </StackPanel>
         </Grid>

 <DataGrid
              x:Name="ReplayGainDataGrid"
      Grid.Row="7"
              Height="Auto"
       MinWidth="400"
          MaxHeight="Infinity"
           Margin="0,0,0,10"
       AutoGenerateColumns="False"
              BeginningEdit="ReplayGainDataGrid_BeginningEdit"
              CanUserAddRows="False"
          CanUserResizeRows="False"
  CellStyle="{StaticResource PropertiesWindowDataGridCellStyle}"
  ColumnHeaderStyle="{StaticResource SharedDataGridColumnHeaderStyle}"
      HorizontalScrollBarVisibility="Disabled"
         ItemsSource="{Binding ReplayGainItems}"
      PreviewMouseWheel="DataGrid_PreviewMouseWheel"
   RowStyle="{StaticResource PropertiesWindowDataGridRowStyle}"
          SelectionChanged="DataGrid_SelectionChanged"
              Style="{StaticResource SharedDataGridStyle}"
      VerticalScrollBarVisibility="Disabled">

           <DataGrid.Columns>
           <DataGridTextColumn
        Width="240"
 MinWidth="100"
  Binding="{Binding Name}"
       CanUserResize="True"
            Header="Name"
    IsReadOnly="True" />
   <DataGridTemplateColumn
         Width="*"
               MinWidth="100"
 CanUserResize="True"
       Header="Value">
          <DataGridTemplateColumn.CellTemplate>
           <DataTemplate>
  <TextBlock IsEnabled="{Binding IsEditable}" Text="{Binding Value}" />
            </DataTemplate>
           </DataGridTemplateColumn.CellTemplate>
      <DataGridTemplateColumn.CellEditingTemplate>
           <DataTemplate>
       <TextBox IsEnabled="{Binding IsEditable}" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
      </DataTemplate>
      </DataGridTemplateColumn.CellEditingTemplate>
     </DataGridTemplateColumn>
              </DataGrid.Columns>
 </DataGrid>

    <!--  Picture Title with Bar  -->
     <Grid Grid.Row="8" Margin="0,0,0,5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <TextBlock
                VerticalAlignment="Center"
                FontSize="{DynamicResource FontSizeHeading}"
                FontWeight="Normal"
                Foreground="{DynamicResource SpectrumPeakBrush}"
                Text="Picture" />
              <Rectangle
                Grid.Column="1"
                Height="1.5"
                Margin="8,3,0,0"
                VerticalAlignment="Center"
                Fill="{DynamicResource SpectrumPeakBrush}" />
            </Grid>

            <!--  Picture section with two columns: ItemsControl and Image  -->
            <Grid Grid.Row="9" Margin="0,0,0,10">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="200" />
              </Grid.ColumnDefinitions>

              <!--  DataGrid: Name/Value rows with editable description  -->
              <DataGrid
                x:Name="PictureDataGrid"
                Grid.Column="0"
                Height="Auto"
                MinWidth="400"
                MaxHeight="Infinity"
                Margin="0,0,0,0"
                AutoGenerateColumns="False"
                BeginningEdit="PictureDataGrid_BeginningEdit"
                CanUserAddRows="False"
                CanUserResizeRows="False"
                CellStyle="{StaticResource PropertiesWindowDataGridCellStyle}"
                ColumnHeaderStyle="{StaticResource SharedDataGridColumnHeaderStyle}"
                HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding PictureInfoItems}"
                PreviewMouseWheel="DataGrid_PreviewMouseWheel"
                RowStyle="{StaticResource PropertiesWindowDataGridRowStyle}"
                SelectionChanged="DataGrid_SelectionChanged"
                Style="{StaticResource SharedDataGridStyle}"
                VerticalScrollBarVisibility="Disabled">

                <DataGrid.Columns>
                  <DataGridTextColumn
                    Width="240"
                    MinWidth="100"
                    Binding="{Binding Name}"
                    CanUserResize="True"
                    Header="Name"
                    IsReadOnly="True" />
                  <DataGridTemplateColumn
                    Width="*"
                    MinWidth="100"
                    CanUserResize="True"
                    Header="Value">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <TextBlock
                          MaxHeight="90"
                          Text="{Binding Value}"
                          TextWrapping="Wrap" />
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                      <DataTemplate>
                        <TextBox
                          MaxHeight="90"
                          AcceptsReturn="True"
                          Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                          TextWrapping="Wrap"
                          VerticalScrollBarVisibility="Auto" />
                      </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                  </DataGridTemplateColumn>
                </DataGrid.Columns>
              </DataGrid>

              <!--  Album cover image  -->
              <Border
                Grid.Column="1"
                Margin="0,0,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top">
                <Image
                  Width="180"
                  Height="180"
                  Source="{Binding AlbumCoverSource}"
                  Stretch="Uniform" />
              </Border>
            </Grid>

            <!--  Lyrics  -->
            <Grid Grid.Row="10" Margin="0,0,0,5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <TextBlock
                VerticalAlignment="Center"
                FontSize="{DynamicResource FontSizeHeading}"
                FontWeight="Normal"
                Foreground="{DynamicResource SpectrumPeakBrush}"
                Text="Lyrics" />
              <Rectangle
                Grid.Column="1"
                Height="1.5"
                Margin="8,3,0,0"
                VerticalAlignment="Center"
                Fill="{DynamicResource SpectrumPeakBrush}" />
            </Grid>
            <TextBox
              x:Name="LyricsTextBox"
              Grid.Row="11"
              MaxHeight="300"
              Padding="8"
              AcceptsReturn="True"
              BorderThickness="0"
              FontSize="{DynamicResource FontSizeNormal}"
              GotFocus="LyricsTextBox_GotFocus"
              IsReadOnly="True"
              LostFocus="LyricsTextBox_LostFocus"
              MouseDoubleClick="LyricsTextBox_MouseDoubleClick"
              PreviewKeyDown="LyricsTextBox_PreviewKeyDown"
              PreviewMouseWheel="LyricsTextBox_PreviewMouseWheel"
              Text="{Binding LyricsItem.Value, UpdateSourceTrigger=PropertyChanged}"
              TextWrapping="Wrap"
              VerticalScrollBarVisibility="Auto">
              <TextBox.Style>
                <Style TargetType="TextBox">
                  <Setter Property="Cursor" Value="Hand" />
                  <Setter Property="Background" Value="Transparent" />
                  <Setter Property="Foreground" Value="{DynamicResource TitleBarForegroundBrush}" />
                  <Style.Triggers>
                    <Trigger Property="IsReadOnly" Value="False">
                      <Setter Property="Cursor" Value="IBeam" />
                      <Setter Property="Background" Value="#FFFFFF" />
                      <Setter Property="Foreground" Value="#000000" />
                      <Setter Property="BorderThickness" Value="2" />
                      <Setter Property="BorderBrush" Value="#0078D4" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </TextBox.Style>
            </TextBox>
          </Grid>
        </ScrollViewer>
      </DockPanel>
    </Grid>
  </Grid>

</Window>
