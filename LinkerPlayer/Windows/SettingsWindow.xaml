<Window
  x:Class="LinkerPlayer.Windows.SettingsWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:models="clr-namespace:LinkerPlayer.Models"
  Title="Settings"
  Width="510"
  Height="300"
  MinWidth="510"
  MinHeight="300"
  AllowsTransparency="True"
  Closing="Window_Closing"
  Loaded="Window_Loaded"
  MouseDown="Window_MouseDown"
  WindowStyle="None"
  mc:Ignorable="d">

  <WindowChrome.WindowChrome>
    <WindowChrome CaptionHeight="35" />
  </WindowChrome.WindowChrome>

  <Window.Resources>
    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid Width="45" Height="30">
              <Border x:Name="border" Background="Black" />
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>

            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background">
                  <Setter.Value>
                    <SolidColorBrush Opacity="0.9" Color="Red" />
                  </Setter.Value>
                </Setter>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="TextBlock">
      <!--<Setter Property="FontFamily" Value="/Fonts/#Montserrat" />-->
      <Setter Property="FontSize" Value="16" />
      <Setter Property="Foreground" Value="#FAFAFA" />
      <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="ComboBox">
      <!--<Setter Property="FontFamily" Value="/Fonts/#Montserrat" />-->
      <Setter Property="FontSize" Value="16" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Height" Value="27" />
    </Style>

    <Style TargetType="Grid">
      <Setter Property="Margin" Value="0,0,0,20" />
    </Style>

    <Style TargetType="materialDesign:PackIcon">
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

  </Window.Resources>

  <Grid Focusable="True">
    <Grid.RowDefinitions>
      <RowDefinition Height="55" />
      <RowDefinition />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <Grid.Background>
      <SolidColorBrush Color="{DynamicResource ChildWindowBackgroundColor}" />
    </Grid.Background>

    <Grid Grid.Row="0">
      <TextBlock
        Margin="12,2,0,0"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        d:Foreground=" White"
        FontSize="22"
        FontWeight="Light"
        Foreground="{DynamicResource TitleBarForegroundBrush}"
        Text="Settings" />

      <StackPanel
        HorizontalAlignment="Right"
        VerticalAlignment="Top"
        Background="{DynamicResource TitleBarBackgroundBrush}"
        Orientation="Horizontal"
        WindowChrome.IsHitTestVisibleInChrome="True">

        <Button
          Name="CloseButton"
          Click="CloseButton_Click"
          MouseEnter="ButtonMouseEnter"
          MouseLeave="ButtonMouseLeave"
          Style="{DynamicResource CloseButton}">
          <Image
            Name="CloseButtonImage"
            Width="10"
            Height="10"
            Opacity="0.6"
            Source="/Images/close.png" />
        </Button>
      </StackPanel>
    </Grid>

    <Grid Grid.Row="1">
      <StackPanel Margin="30,20,30,0">

        <!--  Main Output Device  -->
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>

          <TextBlock Grid.Column="0" HorizontalAlignment="Right">Main Output Device:</TextBlock>

          <ComboBox
            Name="MainOutputDevicesList"
            Grid.Column="2"
            Foreground="Black" />
        </Grid>

        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="100" />
          </Grid.ColumnDefinitions>

          <TextBlock Grid.Column="0" HorizontalAlignment="Right">Color Theme:</TextBlock>
          <ComboBox
            x:Name="ThemesList"
            Grid.Column="2"
            HorizontalContentAlignment="Center"
            ItemsSource="{Binding Path=ThemeColors}"
            SelectionChanged="OnThemeSelectionChanged">
            <ComboBoxItem Content="Light" Tag="{x:Static models:ThemeColors.Light}" />
            <ComboBoxItem Content="Gray" Tag="{x:Static models:ThemeColors.Gray}" />
            <ComboBoxItem Content="Dark" Tag="{x:Static models:ThemeColors.Dark}" />
            <ComboBoxItem Content="Blue" Tag="{x:Static models:ThemeColors.Blue}" />
            <ComboBoxItem Content="Black" Tag="{x:Static models:ThemeColors.Midnight}" />
          </ComboBox>
        </Grid>

        <!--  Enable Sound Wave Visualization  -->
        <!--<Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="40" />
          </Grid.ColumnDefinitions>

          <TextBlock Grid.Column="0">Enable sound wave visualization</TextBlock>
          <ToggleButton Name="VisualizationEnabled" Grid.Column="1" />
        </Grid>-->

        <!--  Minimize to Tray On Close  -->
        <!--<Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="40" />
          </Grid.ColumnDefinitions>

          <TextBlock Grid.Column="0">Minimize to tray on close</TextBlock>
          <ToggleButton Name="MinimizeToTrayEnabled" Grid.Column="1" />
        </Grid>-->

        <!--  Enable equalizer on start  -->
        <!--<Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="40" />
          </Grid.ColumnDefinitions>

          <TextBlock Grid.Column="0">Enable equalizer on start</TextBlock>
          <ToggleButton Name="EqualizerOnStartEnabled" Grid.Column="1" />
        </Grid>-->
      </StackPanel>
    </Grid>

    <Button
      Grid.Row="2"
      Width="100"
      Height="30"
      Margin="0,0,25,25"
      HorizontalAlignment="Center"
      Background="Transparent"
      Click="Save_Click"
      Content="Save"
      Foreground="{DynamicResource ControlPrimaryAccentBrush}"
      Style="{DynamicResource TransparentButton}" />

    <materialDesign:Snackbar
      Name="InfoSnackbar"
      Foreground="#FAFAFA"
      BorderBrush="red"
      HorizontalAlignment="Center"
      Grid.Row="1"
      IsActive="True"
      MessageQueue="{materialDesign:MessageQueue}" />
  </Grid>
</Window>
