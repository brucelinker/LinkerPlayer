<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style x:Key="LinkerCircleButton.FocusVisualStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Ellipse
            Margin="3"
            SnapsToDevicePixels="True"
            Stroke="white"
            StrokeDashArray="2 2"
            StrokeThickness="1"
            UseLayoutRounding="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="LinkerCircleButton" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    <Setter Property="BorderThickness" Value="14" />
    <!--<Setter Property="FocusVisualStyle" Value="{StaticResource LinkerCircleButton.FocusVisualStyle}" />-->
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            <Ellipse Fill="{TemplateBinding Background}" StrokeThickness="0" />
            <Ellipse
              x:Name="EllipseBg"
              Fill="white"
              Opacity="0"
              StrokeThickness="0" />
            <Ellipse
              x:Name="Ellipse"
              Stroke="{TemplateBinding BorderBrush}"
              StrokeThickness="3" />
            <ContentPresenter
              x:Name="IconContent"
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="EllipseBg"
                      Storyboard.TargetProperty="Opacity"
                      From="0"
                      To="0.3"
                      Duration="0:0:0" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <!--  some out fading  -->
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="EllipseBg"
                      Storyboard.TargetProperty="Opacity"
                      To="0"
                      Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Ellipse" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Ellipse" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
              <Setter TargetName="Ellipse" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Ellipse" Property="Opacity" Value="0.3" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlAccentDarkBrush}" />
      </Trigger>
    </Style.Triggers>

  </Style>


  <Style
    x:Key="LinkerCircleToggleButton"
    BasedOn="{StaticResource LinkerCircleButton}"
    TargetType="{x:Type ToggleButton}">
    <Style.Triggers>
      <Trigger Property="ToggleButton.IsChecked" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource ControlAccentDarkBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="Gray" />
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>